evaluationDependsOn(':app')

apply plugin: 'groovy'

sourceSets {
  main {
    groovy {
      srcDirs '../app/src/main/groovy',
              '../app/build/generated/source/r/debug',
              '../app/build/generated/source/buildConfig/debug'
    }
  }
}

dependencies {
  compile files('libs/gdk.jar')
  compile project(':app')
  compile project(':app').configurations.compile.dependencies
  compile fileTree(dir: project(':app').file('build/libs'), include: '*.jar')

  compile 'org.codehaus.groovy:groovy:2.4.0-beta-3'
  compile 'org.spockframework:spock-core:0.7-groovy-2.0'
  compile 'org.robospock:robospock:0.4.4'
}

test {
  testLogging {
    lifecycle {
      exceptionFormat 'full'
    }
  }

  workingDir '../app/src/main'
}

apply plugin: 'jacoco'
jacoco {
  toolVersion = '0.6.2.201302030002'
}
jacocoTestReport {
  reports {
    xml.enabled true
    xml.destination "${buildDir}/jacoco.xml"
    html.destination "${buildDir}/reports/coverage"
  }
}

jacocoTestReport.doFirst {
  classDirectories = files("${buildDir}/classes/main/com/safwan/filmoglass/")
}

task commit(dependsOn: ['clean', ':app:clean', ':app:compileDebugJava', 'test', 'jacocoTestReport']) << {

  XmlParser parser = new XmlParser()
  parser.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);
  parser.setFeature("http://apache.org/xml/features/disallow-doctype-decl", false);
  parser.setFeature("http://xml.org/sax/features/namespaces", false)

  def root = parser.parse(new File("${buildDir}/jacoco.xml"))
  def instructionCount = root.counter.find { counter -> counter.@type == 'INSTRUCTION' }
  def missed = instructionCount.@missed as Double
  def covered = instructionCount.@covered as Double

  def coverageRate = (covered / (covered + missed)) * 100
  def message = "Unit test coverage is ${coverageRate.round(2)}%"

  println(message)

}
